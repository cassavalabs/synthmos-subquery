version: "3"

services:
  postgres:
    build:
      context: .
      dockerfile: ./docker/pg-Dockerfile
    ports:
      - 5432:5432
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  subquery-node-klaytn:
    image: onfinality/subql-node-ethereum:latest
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    volumes:
      - ./:/app
    command:
      # - --multi-chain
      - -f=/app/klaytn.yaml
      - --db-schema=synthmos
      - --workers=1
      - --batch-size=10
      - --unfinalized-blocks=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://subquery-node-klaytn:3000/ready"]
      interval: 3s
      timeout: 5s
      retries: 10

  # subquery-node-ethereum:
  #   image: onfinality/subql-node-ethereum:latest
  #   depends_on:
  #     "postgres":
  #       condition: service_healthy
  #   restart: always
  #   environment:
  #     DB_USER: postgres
  #     DB_PASS: postgres
  #     DB_DATABASE: postgres
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #   volumes:
  #     - ./:/app
  #   command:
  #     - --multi-chain
  #     - -f=/app/ethereum.yaml
  #     - --db-schema=synthmos
  #     - --workers=1
  #     - --batch-size=10
  #     - --unfinalized-blocks=true
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://subquery-node-ethereum:3000/ready"]
  #     interval: 3s
  #     timeout: 5s
  #     retries: 10

  # subquery-node-avalanche:
  #   image: onfinality/subql-node-ethereum:latest
  #   depends_on:
  #     "postgres":
  #       condition: service_healthy
  #   restart: always
  #   environment:
  #     DB_USER: postgres
  #     DB_PASS: postgres
  #     DB_DATABASE: postgres
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #   volumes:
  #     - ./:/app
  #   command:
  #     - --multi-chain
  #     - -f=/app/avalanche.yaml
  #     - --db-schema=synthmos
  #     - --workers=1
  #     - --batch-size=10
  #     - --unfinalized-blocks=true
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://subquery-node-avalanche:3000/ready"]
  #     interval: 3s
  #     timeout: 5s
  #     retries: 10

  # subquery-node-bnbchain:
  #   image: onfinality/subql-node-ethereum:latest
  #   depends_on:
  #     "postgres":
  #       condition: service_healthy
  #   restart: always
  #   environment:
  #     DB_USER: postgres
  #     DB_PASS: postgres
  #     DB_DATABASE: postgres
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #   volumes:
  #     - ./:/app
  #   command:
  #     - --multi-chain
  #     - -f=/app/bnbchain.yaml
  #     - --db-schema=synthmos
  #     - --workers=1
  #     - --batch-size=10
  #     - --unfinalized-blocks=true
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://subquery-node-bnbchain:3000/ready"]
  #     interval: 3s
  #     timeout: 5s
  #     retries: 10

  # subquery-node-moonbeam:
  #   image: onfinality/subql-node-ethereum:latest
  #   depends_on:
  #     "postgres":
  #       condition: service_healthy
  #   restart: always
  #   environment:
  #     DB_USER: postgres
  #     DB_PASS: postgres
  #     DB_DATABASE: postgres
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #   volumes:
  #     - ./:/app
  #   command:
  #     - --multi-chain
  #     - -f=/app/moonbeam.yaml
  #     - --db-schema=synthmos
  #     - --workers=1
  #     - --batch-size=10
  #     - --unfinalized-blocks=true
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://subquery-node-moonbeam:3000/ready"]
  #     interval: 3s
  #     timeout: 5s
  #     retries: 10

  graphql-engine:
    image: onfinality/subql-query:latest
    ports:
      - 3000:3000
    depends_on:
      "postgres":
        condition: service_healthy
    restart: always
    environment:
      DB_USER: postgres
      DB_PASS: postgres
      DB_DATABASE: postgres
      DB_HOST: postgres
      DB_PORT: 5432
    command:
      - --name=synthmos
      - --playground
